{"version":3,"sources":["components/InteractiveTree.jsx","components/MiniTree.jsx","contexts/ReactDims.jsx","d3Land/Circles.js","d3Land/utils/Axes.js","d3Land/utils/Dimensions.js","d3Land/utils/Scales.js","d3Land/ChartInterface.js","components/ReactNode.jsx","data-test.js","App.jsx","reportWebVitals.js","index.js"],"names":["myTreeData","name","attributes","keyA","keyB","keyC","children","InteractiveTree","id","style","width","height","data","React","Component","MiniTree","props","state","loading","formValid","parent","console","log","this","tree","d3","size","stratify","d","parentId","root","sort","a","b","localeCompare","setState","paths","links","nodes","descendants","map","item","x","y","className","node","i","transform","r","fill","dy","textAnchor","fillOpacity","ref","chartRf","ReactDims","createContext","Provider","domNode","useRef","useState","dimensions","setDimensions","timeoutID","newTimeoutID","useEffect","current","getBoundingClientRect","window","addEventListener","getNodeDimensions","removeEventListener","clearTimeout","setTimeout","debounce","value","defaultProps","ChildComponent","Circles","chart","scales","updateData","newData","allCircles","selectAll","transition","duration","attr","xScale","yScale","enter","append","exit","remove","updateScales","newScales","Axes","dims","createAxes","scaleAxes","xAxisBottomG","innerHeight","call","xAxisBottom","yAxisLeftG","yAxisLeft","axisBottom","scale","tickSize","axisLeft","innerWidth","updateAxes","Dimensions","setMargin","margin","top","left","bottom","right","setDims","setInnerDims","Scales","setScales","scaleLinear","domain","range","ChartInterface","domNodeCurrent","init","svg","axes","circles","updateDims","select","styles","display","withContext","canvas","createCanvas","vizInitialized","setVizInitialized","length","Consumer","incomingDims","treeData","App","setData","generateData","arr","push","Math","round","random","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25f8be17.chunk.js","sourcesContent":["import Tree from \"alphasights-react-d3-tree\";\nimport React from \"react\";\n\nconst myTreeData = [\n  {\n    name: \"Top Level\",\n    attributes: {\n      keyA: \"val A\",\n      keyB: \"val B\",\n      keyC: \"val C\",\n    },\n    children: [\n      {\n        name: \"Level 2: A\",\n        attributes: {\n          keyA: \"val A\",\n          keyB: \"val B\",\n          keyC: \"val C\",\n        },\n      },\n      {\n        name: \"Level 2: B\",\n        children: [\n          {\n            name: \"Level 3: A\",\n          },\n          {\n            name: \"Level 3: B\",\n          },\n          {\n            name: \"Level 3: C\",\n          },\n          {\n            name: \"Level 3: D\",\n          },\n        ]\n      },\n      {\n        name: \"Level 2: C\",\n      },\n      {\n        name: \"Level 2: D\",\n      },\n      {\n        name: \"Level 2: E\",\n      },\n      {\n        name: \"Level 2: F\",\n      },\n      {\n        name: \"Level 2: G\",\n      },\n      {\n        name: \"Level 2: H\",\n      },\n      {\n        name: \"Level 2: I\",\n      },\n      {\n        name: \"Level 2: J\",\n        children: [\n          {\n            name: \"Level 3: E\",\n          },\n          {\n            name: \"Level 3: F\",\n          },\n          {\n            name: \"Level 3: G\",\n          },\n          {\n            name: \"Level 3: H\",\n          },\n        ]\n      },\n      {\n        name: \"Level 2: K\",\n      },\n    ],\n  },\n];\n\nclass InteractiveTree extends React.Component {\n  render() {\n    return (\n      // <Tree /> will fill width/height of its container; in this case `#treeWrapper`\n      <div id=\"treeWrapper\" style={{ width: \"100%\", height: \"100%\" }}>\n        <Tree data={myTreeData} />\n      </div>\n    );\n  }\n}\n\nexport default InteractiveTree;\n","// Only use an individual module:\nimport * as d3 from \"d3\";\n// import * as d3 from \"d3-tree\";\nimport React, { Component } from \"react\";\n\nclass MiniTree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      formValid: true,\n      data: [\n        { name: \"ProjectA\", parent: \"\" },\n        { name: \"ApplicationA\", parent: \"ProjectA\" },\n        { name: \"EnvironmentB\", parent: \"ProjectA\" },\n\n        { name: \"TierC\", parent: \"ApplicationA\" },\n        { name: \"TierD\", parent: \"ApplicationA\" },\n        { name: \"TierE\", parent: \"ApplicationA\" },\n\n        { name: \"ServiceF\", parent: \"EnvironmentB\" },\n\n        { name: \"ContainerG\", parent: \"EnvironmentB\" },\n        { name: \"ContainerH\", parent: \"TierE\" },\n        { name: \"ContainerH\", parent: \"TierE\" },\n        { name: \"ContainerH\", parent: \"TierE\" },\n        { name: \"ContainerH\", parent: \"TierE\" },\n        { name: \"ContainerH\", parent: \"TierE\" },\n        { name: \"ContainerH\", parent: \"TierE\" },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.data);\n    const width = 800,\n      height = 800;\n\n    const tree = d3.tree().size([height, width - 160]);\n    const stratify = d3\n      .stratify()\n      .id((d) => {\n        return d.name;\n      })\n      .parentId((d) => {\n        return d.parent;\n      });\n    console.log(stratify);\n    const root = stratify(this.state.data).sort((a, b) => {\n      return a.height - b.height || a.id.localeCompare(b.id);\n    });\n\n    this.setState({ paths: tree(root).links() });\n    this.setState({ nodes: root.descendants() });\n  }\n\n  render() {\n    let paths =\n      this.state.paths &&\n      this.state.paths.map((item) => {\n        let d = d3\n          .linkHorizontal()\n          .x((d) => {\n            return d.y;\n          })\n          .y((d) => {\n            return d.x;\n          });\n        return <path className=\"link\" d={d(item)} />;\n      });\n    let nodes =\n      this.state.nodes &&\n      this.state.nodes.map((node, i) => {\n        return (\n          <g\n            key={node.id}\n            className={\n              \"node\" + node.children ? \" node--internal\" : \" node--leaf\"\n            }\n            transform={`translate(${node.y}, ${node.x})`}\n          >\n            <circle\n              r=\"10\"\n              style={{ fill: node.children ? \"lightsteelblue\" : \"black\" }}\n            />\n            <text y=\"0\" dy=\"0\" textAnchor=\"middle\" style={{ fillOpacity: 1 }}>\n              {node.name}\n            </text>\n          </g>\n        );\n      });\n    return (\n      <svg\n        className=\"tree-chart-basic\"\n        ref={(r) => (this.chartRf = r)}\n        style={{ width: \"800px\", height: \"800px\" }}\n      >\n        <g transform=\"translate(20,20)\">\n          {nodes}\n          {paths}\n        </g>\n      </svg>\n    );\n  }\n}\nexport default MiniTree;\n","import PropTypes from \"prop-types\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nconst ReactDims = React.createContext(null);\n\nexport const Provider = (props) => {\n  const domNode = useRef(null);\n  const [dimensions, setDimensions] = useState({});\n  const [timeoutID, newTimeoutID] = useState(null);\n\n  useEffect(() => {\n    setDimensions(domNode.current.getBoundingClientRect());\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getNodeDimensions);\n    return () => {\n      window.removeEventListener(\"resize\", getNodeDimensions);\n    };\n  }, []);\n\n  const getNodeDimensions = () => {\n    clearTimeout(timeoutID);\n    newTimeoutID(\n      setTimeout(() => {\n        setDimensions(domNode.current.getBoundingClientRect());\n      }, props.debounce)\n    );\n  };\n\n  return (\n    <div ref={domNode} style={{ height: \"100%\" }}>\n      <ReactDims.Provider value={dimensions}>\n        {props.children}\n      </ReactDims.Provider>\n    </div>\n  );\n};\n\nProvider.propTypes = {\n  debounce: PropTypes.number,\n};\n\nProvider.defaultProps = {\n  debounce: 100,\n};\n\nexport const withContext = (ChildComponent) => {\n  return (props) => (\n    <ReactDims.Consumer>\n      {(incomingDims) => <ChildComponent {...props} dims={incomingDims} />}\n    </ReactDims.Consumer>\n  );\n};\n","import { selectAll } from \"d3-selection\";\nimport transition from \"d3-transition\";\n\nclass Circles {\n  constructor(chart, data, scales) {\n    this.chart = chart;\n    this.scales = scales;\n    this.updateData(data);\n  }\n\n  updateData = (newData) => {\n    this.data = newData;\n    this.allCircles = this.chart.selectAll(\".myCircle\").data(this.data);\n    this.allCircles\n      .transition()\n      .duration(500)\n      .attr(\"cx\", (d, i) => this.scales.xScale(i))\n      .attr(\"cy\", (d) => this.scales.yScale(d))\n      .attr(\"fill\", \"orange\");\n    this.enter();\n  };\n\n  enter = () => {\n    this.allCircles\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"myCircle\")\n      .attr(\"cx\", (d, i) => this.scales.xScale(i))\n      .attr(\"cy\", (d) => this.scales.yScale(d))\n      .attr(\"r\", 10)\n      .attr(\"fill\", \"green\");\n    this.exit();\n  };\n\n  exit = () => {\n    this.allCircles.exit().remove();\n  };\n\n  updateScales = (newScales) => {\n    this.scales = newScales;\n    this.allCircles = this.chart\n      .selectAll(\".myCircle\")\n      .transition()\n      .duration(500)\n      .attr(\"cx\", (d, i) => this.scales.xScale(i))\n      .attr(\"cy\", (d) => this.scales.yScale(d));\n  };\n}\n\nexport default Circles;\n","import { axisBottom, axisLeft } from \"d3-axis\";\nclass Axes {\n  constructor(parent, scales, dims) {\n    this.createAxes(parent, scales, dims);\n  }\n  createAxes = (parent, scales, dims) => {\n    this.scaleAxes(scales, dims);\n    this.xAxisBottomG = parent\n      .append(\"g\")\n      .attr(\"transform\", `translate(0, ${dims.innerHeight})`)\n      .call(this.xAxisBottom);\n    this.yAxisLeftG = parent.append(\"g\").call(this.yAxisLeft);\n  };\n  scaleAxes = (scales, dims) => {\n    this.xAxisBottom = axisBottom()\n      .scale(scales.xScale)\n      .tickSize(-dims.innerHeight);\n    this.yAxisLeft = axisLeft().scale(scales.yScale).tickSize(-dims.innerWidth);\n  };\n  updateAxes = (scales, dims) => {\n    this.scaleAxes(scales, dims);\n    this.xAxisBottomG\n      .attr(\"transform\", `translate(0, ${dims.innerHeight})`)\n      .call(this.xAxisBottom);\n    this.yAxisLeftG.call(this.yAxisLeft);\n  };\n}\nexport default Axes;\n","class Dimensions {\n  constructor(dims) {\n    this.setMargin();\n    this.setDims(dims);\n    this.setInnerDims();\n  }\n  setMargin = () => {\n    this.margin = { top: 20, left: 30, bottom: 20, right: 30 };\n  };\n  setDims = (dims) => {\n    const { width, height } = dims;\n    this.width = width;\n    this.height = height;\n    this.setInnerDims();\n  };\n  setInnerDims = () => {\n    this.innerHeight = this.height - (this.margin.top + this.margin.bottom);\n    this.innerWidth = this.width - (this.margin.left + this.margin.right);\n  };\n}\nexport default Dimensions;\n","import { extent, max, min } from \"d3-array\";\n/*\nIt takes two arguments; ‘data’ & ‘dims.’ You can imagine perhaps using the ‘data’ parameter for setting up your scales’\ndomains, but we won’t bother in this example. Also perhaps you could add a range parameter, there are lot’s of\npossibilities, but for now let’s keep it simple.\n */\nimport { scaleLinear } from \"d3-scale\";\nclass Scales {\n  constructor(data, dims) {\n    this.setScales(data, dims);\n  }\n  setScales = (data, dims) => {\n    this.xScale = scaleLinear().domain([0, 9]).range([0, dims.innerWidth]);\n    this.yScale = scaleLinear().domain([0, 10]).range([dims.innerHeight, 0]);\n  };\n}\nexport default Scales;\n","import { select } from \"d3-selection\";\n\nimport Circles from \"./Circles\";\nimport { Axes, Dimensions, Scales } from \"./utils\";\n// import { tree } from \"d3-tree\";\n\nclass ChartInterface {\n  constructor(domNodeCurrent) {\n    this.svg = select(domNodeCurrent).append(\"svg\");\n    this.svg.attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n  }\n  init = (data, dims) => {\n    this.data = data;\n    console.log(data);\n    this.dims = new Dimensions(dims);\n    this.chart = this.svg.append(\"g\");\n\n    // Style lines (todo: use correct scale\n    this.chart\n      .attr(\"stroke\", \"#f02\")\n      .attr(\"stroke-opacity\", 0.4)\n      .attr(\"stroke-width\", 1.5);\n\n    // Position chart\n    this.chart.attr(\n      \"transform\",\n      `translate(${this.dims.margin.left}, ${this.dims.margin.top})`\n    );\n    this.scales = new Scales(this.data, this.dims);\n    this.axes = new Axes(this.chart, this.scales, this.dims);\n    this.circles = new Circles(this.chart, this.data, this.scales);\n\n    // this.updateData(data);//<--- commented out; now redundant!!\n  };\n  updateData = (data) => {\n    this.circles.updateData(data);\n  };\n  updateDims = (dims) => {\n    this.dims.setDims(dims);\n    this.scales.setScales(this.data, this.dims);\n    this.axes.updateAxes(this.scales, this.dims);\n    this.circles.updateScales(this.scales);\n  };\n}\nexport default ChartInterface;\n","import React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nimport { withContext } from \"../contexts/ReactDims\";\nimport ChartInterface from \"../d3Land/ChartInterface\";\n\nconst styles = {\n  display: \"grid\",\n  height: \"100%\",\n  // backgroundColor: \"#000\",\n};\n\nconst ReactNode = ({ dims, data }) => {\n  const domNode = useRef(null);\n  const [canvas, createCanvas] = useState(null);\n  const [vizInitialized, setVizInitialized] = useState(false);\n\n  useEffect(() => {\n    createCanvas(() => new ChartInterface(domNode.current));\n  }, []);\n\n  useEffect(() => {\n    vizInitialized && canvas.updateDims(dims);\n  }, [dims]);\n\n  useEffect(() => {\n    vizInitialized && canvas.updateData(data);\n  }, [data]);\n\n  useEffect(() => {\n    if (data.length && dims.width && vizInitialized === false) {\n      // Array stuff for old example\n      // if (data.length && dims.width && vizInitialized === false) {\n      canvas.init(data, dims);\n      setVizInitialized(() => true);\n    }\n  }, [data, dims]);\n\n  return <div ref={domNode} style={styles} />;\n  // return (<div style={styles} ref={domNode}>\n  //   {dims.width} x {dims.height}\n  // </div>);\n};\nexport default withContext(ReactNode);\n","export const treeData = {\n  name: \"root\",\n  children: [\n    { name: \"child #1\" },\n    {\n      name: \"child #2\",\n      children: [\n        { name: \"grandchild #1\" },\n        { name: \"grandchild #2\" },\n        { name: \"grandchild #3\" },\n      ],\n    },\n  ],\n};\n","import \"./App.css\";\n\nimport { useEffect, useState } from \"react\";\n\nimport InteractiveTree from \"./components/InteractiveTree\";\nimport MiniTree from \"./components/MiniTree\";\nimport ReactNode from \"./components/ReactNode\";\nimport { Provider } from \"./contexts/ReactDims\";\nimport { treeData } from \"./data-test.js\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const generateData = () => {\n    let arr = [];\n    for (let i = 0; i < 10; i++) {\n      arr.push(Math.round(Math.random() * 10));\n    }\n    setData(arr);\n  };\n  useEffect(() => generateData(), []);\n\n  return (\n    <div className=\"myLayout\">\n      <div className=\"coolThing\">\n        <Provider>\n          <h1>Dynamic SVG loader</h1>\n          <button onClick={generateData}>update data</button>\n          <ReactNode data={data} />\n          <h1>Calculate in D3, Render in React</h1>\n          <MiniTree data={treeData} />\n          <h1>Interactive tree</h1>\n          <InteractiveTree/>\n        </Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}