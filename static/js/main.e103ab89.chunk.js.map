{"version":3,"sources":["contexts/ReactDims.jsx","ThePattern.js","components/ReactNode.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ReactDims","React","createContext","Provider","props","domNode","useRef","useState","dimensions","setDimensions","timeoutID","newTimeoutID","useEffect","current","getBoundingClientRect","window","addEventListener","getNodeDimensions","removeEventListener","clearTimeout","setTimeout","debounce","ref","style","height","value","children","defaultProps","ChildComponent","ThePattern","domNodeCurrent","init","data","dims","setDims","setScales","chart","svg","append","attr","margin","left","top","createAxes","updateData","innerHeight","bottom","innerWidth","width","right","xScale","scaleLinear","domain","range","yScale","scaleAxes","xAxisBottomG","call","xAxisBottom","yAxisLeftG","yAxisLeft","axisBottom","scale","tickSize","axisLeft","allCircles","selectAll","transition","duration","d","i","enter","exit","remove","updateAxes","updateDims","circles","this","select","styles","display","withContext","canvas","createCanvas","vizInitialized","setVizInitialized","length","Consumer","incomingDims","App","setData","generateData","arr","push","Math","round","random","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e103ab89.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nconst ReactDims = React.createContext(null);\n\nexport const Provider = (props) => {\n  const domNode = useRef(null);\n  const [dimensions, setDimensions] = useState({});\n  const [timeoutID, newTimeoutID] = useState(null);\n\n  useEffect(() => {\n    setDimensions(domNode.current.getBoundingClientRect());\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getNodeDimensions);\n    return () => {\n      window.removeEventListener(\"resize\", getNodeDimensions);\n    };\n  }, []);\n\n  const getNodeDimensions = () => {\n    clearTimeout(timeoutID);\n    newTimeoutID(\n      setTimeout(() => {\n        setDimensions(domNode.current.getBoundingClientRect());\n      }, props.debounce)\n    );\n  };\n\n  return (\n    <div ref={domNode} style={{ height: \"100%\" }}>\n      <ReactDims.Provider value={dimensions}>\n        {props.children}\n      </ReactDims.Provider>\n    </div>\n  );\n};\n\nProvider.propTypes = {\n  debounce: PropTypes.number,\n};\n\nProvider.defaultProps = {\n  debounce: 100,\n};\n\nexport const withContext = (ChildComponent) => {\n  return (props) => (\n    <ReactDims.Consumer>\n      {(incomingDims) => <ChildComponent {...props} dims={incomingDims} />}\n    </ReactDims.Consumer>\n  );\n};\n","import { axisBottom, axisLeft } from \"d3-axis\";\nimport { scaleLinear } from \"d3-scale\";\nimport { select } from \"d3-selection\";\nimport { transition } from 'd3-transition';\n\nclass ThePattern {\n  constructor(domNodeCurrent) {\n    this.svg = select(domNodeCurrent).append(\"svg\");\n    this.svg.attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n    // this.svg.style(\"background-color\", \"red\");\n    this.margin = { top: 20, left: 30, bottom: 20, right: 30 };\n  }\n  init = (data, dims) => {\n    this.setDims(dims); //<-----one\n    this.setScales(); //<-------two\n    this.chart = this.svg.append(\"g\");\n    this.chart.attr(\n      \"transform\",\n      `translate(${this.margin.left}, ${this.margin.top})`\n    );\n    this.createAxes(); //<-----three\n    this.updateData(data);\n  };\n  // first; set up initial dimensions.\n  setDims = (dims) => {\n    this.dims = dims;\n    this.innerHeight =\n      this.dims.height - (this.margin.top + this.margin.bottom);\n    this.innerWidth = this.dims.width - (this.margin.left + this.margin.right);\n  };\n  // second; set up scales using new dims\n  setScales = () => {\n    this.xScale = scaleLinear().domain([0, 9]).range([0, this.innerWidth]);\n    this.yScale = scaleLinear().domain([0, 10]).range([this.innerHeight, 0]);\n  };\n  // third; create axis groups using the following methods.\n  createAxes = () => {\n    this.scaleAxes();\n    this.xAxisBottomG = this.chart\n      .append(\"g\")\n      .attr(\"transform\", `translate(0, ${this.innerHeight})`)\n      .call(this.xAxisBottom);\n    this.yAxisLeftG = this.svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${this.margin.left}, ${this.margin.top})`)\n      .call(this.yAxisLeft);\n  };\n  scaleAxes = () => {\n    this.xAxisBottom = axisBottom()\n      .scale(this.xScale)\n      .tickSize(-this.innerHeight);\n    this.yAxisLeft = axisLeft().scale(this.yScale).tickSize(-this.innerWidth);\n  };\n  updateData=(data)=>{\n    this.data = data;\n    this.allCircles =\n        this.chart.selectAll('.myCircle').data(this.data);\n    this.allCircles\n        .transition().duration(500)\n        .attr('cx', (d, i)=>this.xScale(i))\n        .attr('cy', (d)=>this.yScale(d))\n        .attr('fill', 'orange')\n    this.enter(); //<----call this.enter immediately.\n  };\n  enter=()=>{\n    this.allCircles\n        .enter().append('circle')\n        .attr('class', 'myCircle')\n        .attr('r', 10)\n        .attr('cx', (d, i)=>this.xScale(i))\n        .attr('cy', (d)=>this.yScale(d))\n        .attr('fill', 'green')\n    this.exit(); //<---- call this.exit immediately.\n  };\n  exit=()=>{\n    this.allCircles.exit().remove();\n  };\n  updateAxes=()=>{\n    this.scaleAxes();\n    this.xAxisBottomG\n        .attr('transform', `translate(0, ${this.innerHeight})`)\n        .call(this.xAxisBottom)\n    this.yAxisLeftG\n        .call(this.yAxisLeft)\n  };\n  updateDims=(dims)=>{\n    this.setDims(dims);//<------------one\n    this.setScales(this.dims);//<-----two\n    this.updateAxes();//<-----------three\n    this.circles =\n        this.chart.selectAll('.myCircle')\n            .transition().duration(500)\n            .attr('cx', (d, i)=>this.xScale(i))\n            .attr('cy', (d)=>this.yScale(d))\n  };}\nexport default ThePattern;\n","import React from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nimport { withContext } from \"../contexts/ReactDims\";\nimport ThePattern from \"../ThePattern\";\n\nconst styles = {\n  display: \"grid\",\n  height: \"100%\",\n  // backgroundColor: \"#000\",\n};\n\nconst ReactNode = ({ dims, data }) => {\n  const domNode = useRef(null);\n  const [canvas, createCanvas] = useState(null);\n  const [vizInitialized, setVizInitialized] = useState(false);\n\n  useEffect(() => {\n    createCanvas(() => new ThePattern(domNode.current));\n  }, []);\n\n  useEffect(() => {\n    vizInitialized && canvas.updateDims(dims);\n  }, [dims]);\n\n  useEffect(()=>{\n    vizInitialized && canvas.updateData(data);\n  }, [data]);\n\n  useEffect(() => {\n    if (data.length > 1 && dims.width && vizInitialized === false) {\n      canvas.init(data, dims);\n      setVizInitialized(() => true);\n    }\n  }, [data, dims]);\n\n  return <div ref={domNode} style={styles} />;\n  // return (<div style={styles} ref={domNode}>\n  //   {dims.width} x {dims.height}\n  // </div>);\n};\nexport default withContext(ReactNode);\n","import \"./App.css\";\n\nimport ReactNode from \"./components/ReactNode\";\nimport { Provider } from \"./contexts/ReactDims\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n    const [data, setData] = useState([]);\n    const generateData = ()=>{\n        let arr = [];\n        for(let i =0; i < 30; i++){\n            arr.push(Math.round(Math.random()*10));\n        };\n        setData(arr);\n    };\n    useEffect(()=>generateData(),[])\n\n    return (\n    <div className=\"myLayout\">\n      <div className=\"coolThing\">\n          <button onClick={generateData}>update data</button>\n\n        <Provider>\n          <ReactNode data={data} />\n        </Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}